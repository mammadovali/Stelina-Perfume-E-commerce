@model ProductViewModel

@{
    ViewData["Title"] = "Index";
}
<div class="main-content main-content-product left-sidebar">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb-trail breadcrumbs">
                    <ul class="trail-items breadcrumb">
                        <li class="trail-item trail-begin">
                            <a asp-action="index" asp-controller="home">Home</a>
                        </li>
                        <li class="trail-item trail-end active">Products</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="sidebar col-lg-3 col-md-3 col-sm-12 col-xs-12">
                <div class="wrapper-sidebar shop-sidebar">
                    <div class="widget woof_Widget">
                        <div class="widget widget-categories">
                            <h3 class="widgettitle">Categories</h3>
                            @*<ul class="list-categories">
                                @foreach (var item in Model.Categories)
                                {
                                <li class="list-category-item" >

                                @if (item.ParentId != null)
                                {
                                <input type="checkbox" id="cb-@item.Id" />
                                }
                                <label for="cb-@item.Id" class="label-text-category">@item.Name</label>
                                @if (item.Children != null && item.Children.Any())
                                {
                                <i class="fa fa-chevron-down show-children show-children-@item.Id" data-btn-id="@item.Id"></i>
                                <ul class="children-categories ul-@item.Id" style="display: none;" data-id="@item.Id">
                                @foreach (var child in item.Children)
                                {
                                <li class="list-category-item category-hover-item" style="border: none;">
                                <input type="checkbox" id="cb-@child.Id" />
                                <label for="cb-@child.Id" class="label-text">@child.Name</label>
                                </li>
                                }
                                </ul>
                                }

                                </li>
                                }
                                </ul>*@
                            @Html.Raw(Model.Categories.GetCategoriesRaw())
                        </div>
                        <div class="widget widget_filter_price">
                            <h4 class="widgettitle">Price</h4>
                            <div class="price-slider-wrapper">
                                <div data-label-reasult="Range:"
                                     data-min="0"
                                     data-max="@((int)Model.MaxPrice)"
                                     data-unit="₼"
                                     class="slider-range-price"
                                     data-value-min="0"
                                     data-value-max="@((int)Model.MaxPrice)"></div>
                                <div class="price-slider-amount" data-entity-name="prices">
                                    <span class="from price-number">0<b>₼</b> </span>
                                    <span class="to price-number">@((int)Model.MaxPrice)<b>₼</b> </span>
                                </div>
                            </div>
                        </div>
                        <div class="widget widget-brands">
                            <h3 class="widgettitle">Brands</h3>
                            <ul class="list-brands" data-entity-name="brands">

                                @foreach (var item in Model.Brands)
                                {
                                    <li class="category-hover-item">
                                        <input type="checkbox" id="cbb-@item.Id" />
                                        <label for="cbb-@item.Id" class="label-text label-text-@item.Id" data-entity-id="@item.Id">@item.Name</label>
                                    </li>
                                }

                            </ul>
                        </div>
                    </div>

                    <partial name="_Subscribe" />

                </div>
            </div>
            <div class="content-area shop-grid-content no-banner col-lg-9 col-md-9 col-sm-12 col-xs-12">
                <div class="site-main">
                    <h3 class="custom_blog_title">Products</h3>
                    <div class="shop-top-control">
                        <form class="filter-choice select-form sorting-dropdown">
                            <span class="title">Sort by</span>
                            <select title="sort-by" class="chosen-selected">
                                <option value="nameAsc">Alphabetically, A-Z</option>
                                <option value="nameDesc">Alphabetically, Z-A</option>
                                <option value="priceAsc">Price: low to high</option>
                                <option value="priceDesc">Price: high to low</option>
                            </select>
                        </form>
                    </div>
                    <ul class="row list-products auto-clear equal-container product-grid" style="display: flex; flex-wrap: wrap;justify-content: start;">

                        <partial name="_ProductContainer" model="@Model.Products" />

                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section addcss{
<style>
    .rotate {
        transform: rotate(-180deg);
    }

    .chosen-selected {
        border: none;
    }


    .chosen-selected {
        background-color: white;
        color: black;
        padding: 10px;
        border: none;
        border-radius: 5px;
        transition: all 0.2s linear;
    }

    .chosen-selected:hover {
        background-color: #ab8e66;
        color: white;
    }
    
    .chosen-selected::before {
        content: "\25BC";
        position: absolute;
        top: 50%;
        right: 10px;
        transform: translateY(-50%);
        color: black;

    }
    
    .chosen-selected:hover::before {
        color: white;
    }

    
     .chosen-selected option {
       opacity: 0;
       transition: opacity 0.5s ease-in-out;
     }
     
     .chosen-selected:hover option {
       opacity: 1;
     }

</style>

}


@section addjs{
<script class="removable">

    $(document).ready(function(){

        $(`.show-children`).click(function(){

            let btnId = $(this).data("btn-id");

            $(".children-categories").each(function(){

                let categoryId = $(this).data("id");

                if(btnId == categoryId){
                    $(`.children-categories.ul-${categoryId}`).slideToggle({duration: 250});
                    $(`.show-children-${btnId}`).toggleClass("rotate");
                }
            })

        })

        $(".label-text").click(function(){
            let entityId = $(this).data("entity-id");

            $(`.category-hover-item .label-text-${entityId}`).toggleClass("checked");
        })

        $(".label-text-category").click(function(){
            let entityId = $(this).data("entity-id");

            $(`.category-hover-item .label-text-category-${entityId}`).toggleClass("checked");
        })

        $(".category-hover-item .label-text").click(function(e){
            setFilter();
        });

        $(".category-hover-item .label-text-category").click(function(e){
            setFilter();
        });


          $('.slider-range-price').each(function () {
            var min = $(this).data('min');
            var max = $(this).data('max');
            var unit = $(this).data('unit');
            var value_min = $(this).data('value-min');
            var value_max = $(this).data('value-max');
            var t = $(this);
            $(this).slider({
                range: true,
                min: min,
                max: max,
                values: [value_min, value_max],
                slide: function (event, ui) {
                    var result = ' <span class="price-number">' + ui.values[0] +  '<b>' + unit + '</b>' + '</span>  <span class="price-number"> ' + ui.values[1]  + '<b>' + unit + '</b>' + '</span>';
                    t.closest('.price-slider-wrapper').find('.price-slider-amount').html(result);

                    setFilter();
                }
            });
          });


        function setFilter(){

          if($.setFilterProcessId != undefined){
              clearTimeout($.setFilterProcessId);
          }

          $.setFilterProcessId = setTimeout(function(){


              const filterObj = {};

              $("[data-entity-name]").each(function(index, item){
                  const entityPropertyName = $(item).data("entity-name");

                  filterObj[entityPropertyName] = [];

                  $(item).find("label.checked").each(function(indexLabel, itemLabel){
                      const entityId = $(itemLabel).data("entity-id");

                      filterObj[entityPropertyName].push(entityId);
                  });

                  $(item).find(".price-number").each(function(indexSpan, itemSpan){
                      const priceNumber = parseInt($(itemSpan).text());

                      filterObj[entityPropertyName].push(priceNumber);
                  });

                  //console.log(filterObj)
              });

              //console.log(filterObj);

              $.ajax({
                  url: '@Url.Action("Filter")',
                  type: 'POST',
                  data: filterObj,
                  //dataType: "application/json",
                  dataType: 'html',
                  contentType: 'application/x-www-form-urlencoded',
                  beforeSend: function(){
                      $("ul.list-products").html("<img src='/assets/images/loading.gif'/>");
                  },
                  success: function(res){
                      setTimeout(function(){
                          $("ul.list-products").html(res);

                          if ($('ul.list-products').children().length === 0) {
                               $("ul.list-products").html("<div style='display: flex; justify-content: center;'><img src='/assets/images/no-matches.png'/></div>");
                          }

                      },1000);

                  },
                  error: function(res){
                     //console.warn(res.responseText);
                  }

              }).always(function(){
                    //console.log("sorgudan sonra")
                 });


          }, 2000);
        }


        $(".chosen-selected").on('change', function() {
             var sortOrder = $(".chosen-selected option:selected").val();

             //console.log(sortOrder);

             $.ajax({
                type: "GET",
                url: "/Shop/SortBy",
                data: { sortOrder: sortOrder },
                success: function (res) {
                  //console.log(res)
                  $("ul.list-products").html(res);
                },
                error: function (res) {
                  console.warn(res)
                }
             });
        });
    });


</script>
}